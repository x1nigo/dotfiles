#!/bin/sh

bglink="${XDG_DATA_HOME:-$HOME/.local/share}/bg"
bgdir="${XDG_DATA_HOME:-$HOME/.local/share}/backgrounds/"
file="$2"
base="${file##*/}"
cache=/tmp/bgtype
bgloc="$(readlink -f "$2")"

readme() { cat << EOF
setwp: set-wallpaper, a minimal script meant to render
wallpapers

Main use:
	-a file.jpg	Add an image file to backgrounds folder
	-s		Select a wallpaper from the backgrounds folder
	-f file.jpg	Render wallpaper with file in argument
	-r /directory	Randomly select a wallpaper from a directory
	-d /directory	Select wallpaper in a given directory
	-h		Display the readme message

Backgrounds directory:
 ~/.local/share/backgrounds
EOF
}

bgmode() {
	mode=$(printf "%s\n" "center" "maximize" "stretch" "tile" "zoom" | dmenu -l 10 -p "Select a Mode:")
}

bgadd() {
	case "$(file --mime-type -b "$bgloc")" in
		image/*) cp "$bgloc" "$bgdir" && notify-send "🖼️ Image file added!" "\`$base\` now located in \`$bgdir\`." ;;
		*) notify-send "🖼️ Error" "Not a valid image file."; exit 1 ;;
	esac
}

bgsel() {
	realfile="$(find "$bgdir" -iregex ".*.\(jpg\|jpeg\|png\|gif\)" -type f | dmenu -l 20 -p "Set as wallpaper:")"
	[ -z $realfile ] && exit 1
	ln -sf "$realfile" "$bglink"
	bgmode
	[ -z $mode ] && exit 1 || echo "$mode" > $cache && \
		notify-send "🖼️ Changing wallpaper..." "\`$realfile\`"
}

bgfile() {
	case "$(file --mime-type -b "$bgloc")" in
		image/*) ln -sf "$bgloc" "$bglink" ;;
		*) notify-send "🖼️ Error" "Not a valid image file."; exit 1 ;;
	esac
	bgmode
	[ -z $mode ] && exit 1 || echo "$mode" > $cache && \
		notify-send "🖼️ Changing wallpaper..." "\`$bgloc\`"
}


bgrand() {
	case "$(file --mime-type -b "$bgloc")" in
		inode/directory) ln -sf "$(find "$bgloc" -iregex ".*.\(jpg\|jpeg\|png\|gif\)" -type f | shuf -n 1)" "$bglink" ;;
		*) notify-send "🖼️ Error" "Not a valid directory."; exit 1 ;;
	esac
	bgmode
	[ -z $mode ] && exit 1 || echo "$mode" > $cache && \
		notify-send "❓ Random wallpaper chosen." "from directory: \`$bgloc\`"
}

bgfold() {
	case "$(file --mime-type -b "$bgloc")" in
		inode/directory)
			realfile="$(find "$bgloc" -iregex ".*.\(jpg\|jpeg\|png\|gif\)" -type f | dmenu -l 20 -p "Set as wallpaper:")"
			[ -z $realfile ] && exit 1
			ln -sf "$realfile" "$bglink"
			;;
		*) notify-send "🖼️ Error" "Not a valid directory."; exit 1 ;;
	esac
	bgmode
	[ -z $mode ] && exit 1 || echo "$mode" > $cache && \
		notify-send "🖼️ Changing wallpaper..." "\`$realfile\`"
}

pywal() {
	if command -v wal >/dev/null 2>&1; then
		wal -n -i "$(readlink -f $bglink)"
	fi
}

while getopts "a:sf:r:d:ph" o; do
	case ${o} in
		a) bgadd && exit 1 ;;
		s) bgsel ;;
		f) bgfile ;;
		r) bgrand ;;
		d) bgfold ;;
		p) pywal ;;
		h|*) readme && exit 1 ;;
	esac
done

[ -f "$cache" ] && read -r mode < "$cache" || mode="zoom"
xwallpaper --$mode "$bglink"
