#!/bin/sh

### README ###
readme() { cat << EOF
mb: meta-blitz, configure metadata of audio/video files
for \`mpv\`, \`ncmpcpp\`, or any other media player.

Usage:
	mb [OPTIONS] file/dir

Main actions:
	-f: Edit a single file's metadata manually
	-d: Edit metadata of items in a given directory
	-A: Change artist
	-t: Change song/track title
	-a: Change album title
	-n: Change track number
	-y: Change publication year

NOTE: Make sure the file you input is a valid audio file.
EOF
}

### VARIABLES ###
file="$2"
ext="opus"
trueloc="$(readlink -f "$2")"
ftype=$(file --mime-type -b "$trueloc")
# Display readme message if nothing is passed.
[ -z "$file" ] && readme && exit 1

### FUNCTIONS ###
checkfile() {
	case "$ftype" in
		audio/*|video/*) continue ;;
		*) echo "Not a valid audio or video file." && exit 1 ;;
	esac
}

checkdir() {
	case "$ftype" in
		inode/directory) continue ;;
		*) echo "Not a valid directory." && exit 1 ;;
	esac
}

errormsg() {
	printf "%s\n" "An error has occurred. Please try again. Make sure the file you're editing is a valid audio file."; exit 1
}

finalize() {
	mv -f procfile.$ext "$file" && \
		printf "Processing metadata complete!\n" && exit 1
}

procmsg() {
	printf "Processing metadata...\n"
}

editmsg() {
	printf "%s\n" "Editing metadata of: \`$file\`"
}
# Script for a single artist in a given album
withartist() {
	printf "%s\n" "Editing metadata of \`$i\`"
	printf "\t%s" "Title: "; read -r title
	printf "\t%s" "Track number: "; read -r track
	procmsg
	ffmpeg -i "$i" \
		-metadata artist="$artist" \
		-metadata title="$title" \
		-metadata album="$album" \
		-metadata year="$year" \
		-metadata track="$track" procfile.$ext >/dev/null 2>&1 || errormsg
	mv -f procfile.$ext "$i"
}
# Script for multiple artists in a given album
diffartist() {
	printf "%s\n" "Editing metadata of \`$i\`"
	printf "\t%s" "Title: "; read -r title
	printf "\t%s" "Artist: "; read -r artist
	printf "\t%s" "Track number: "; read -r track
	procmsg
	ffmpeg -i "$i" \
		-metadata artist="$artist" \
		-metadata title="$title" \
		-metadata album="$album" \
		-metadata year="$year" \
		-metadata track="$track" procfile.$ext >/dev/null 2>&1 || errormsg
	mv -f procfile.$ext "$i"
}

### MAIN PROCESSES ###
# Run this for an individual file to edit.
unaedit() {
	editmsg
	printf "\t%s" "Title: "; read -r title
	printf "\t%s" "Artist: "; read -r artist
	printf "\t%s" "Album title: "; read -r album
	printf "\t%s" "Publication year: "; read -r year
	printf "\t%s" "Track number: "; read -r track
	procmsg
	ffmpeg -i "$file" \
		-metadata artist="$artist" \
		-metadata title="$title" \
		-metadata album="$album" \
		-metadata year="$year" \
		-metadata track="$track" procfile.$ext >/dev/null 2>&1
}

# Give this function a directory and it will loop through all
# audio/video files.
editall() {
	IFS='
	'
	printf "Album title: "; read -r album
	printf "Publication year: "; read -r year
	printf "Does this album contain only a single artist? [y/N] "; read -r ans
	if [ "$ans" = "y" ]; then
		printf "Artist: "; read -r artist
		for i in $(ls); do
			case "$(file --mime-type -b "$i")" in
				audio/*|video/*) withartist ;;
			esac
		done
	else
		for i in $(ls); do
			case "$(file --mime-type -b "$i")" in
				audio/*|video/*) diffartist ;;
			esac
		done
	fi
	printf "Processing metadata complete!\n"
}

# Change the name of the artist
changeartist() {
	editmsg
	printf "\tArtist: "; read -r artist
	procmsg
	ffmpeg -i "$file" \
		-metadata artist="$artist" procfile.$ext >/dev/null 2>&1
}
# Change the song/track title
changetitle() {
	editmsg
	printf "\tTitle: "; read -r title
	procmsg
	ffmpeg -i "$file" \
		-metadata title="$title" procfile.$ext >/dev/null 2>&1
}

# Change the album title
changealbum() {
	editmsg
	printf "\tAlbum title: "; read -r album
	procmsg
	ffmpeg -i "$file" \
		-metadata album="$album" procfile.$ext >/dev/null 2>&1
}

# Change the track number
changetrack() {
	editmsg
	printf "\tTrack number: "; read -r track
	procmsg
	ffmpeg -i "$file" \
		-metadata track="$track" procfile.$ext >/dev/null 2>&1
}

# Change the publication year
changeyear() {
	editmsg
	printf "\tPublication year: "; read -r year
	procmsg
	ffmpeg -i "$file" \
		-metadata year="$year" procfile.$ext >/dev/null 2>&1
}

### OPTIONS ###
# The character `:` means that the letter before it requires
# an argument to be passed.
while getopts "f:d:A:t:a:n:y:h" o; do
	case ${o} in
		f) checkfile && unaedit && finalize || errormsg ;;
		d) checkdir && editall && exit 1 ;;
		A) checkfile && changeartist && finalize || errormsg ;;
		t) checkfile && changetitle && finalize || errormsg ;;
		a) checkfile && changealbum && finalize || errormsg ;;
		n) checkfile && changetrack && finalize || errormsg ;;
		y) checkfile && changeyear && finalize || errormsg ;;
		*) readme && exit 1 ;;
	esac
done; readme
