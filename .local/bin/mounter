#! /bin/sh

# This script is used for mounting mobile phones and usb drives,
# whether encrypted or not.
# Make sure that your phone is already connected via usb wire
# and MTP is enabled on such device.

# We need to use this to separate the drives properly.
IFS=''

# Simple output of the lsblk command.
output=$(lsblk -rpo "name,size,fstype,type,mountpoint" | grep "part $")

# Get encrypted drives.
allencrypted="$(echo $output | grep crypto_LUKS | awk '{print $1}')"
[ -z $allencrypted ] || encrypted=$(echo $allencrypted | sed "s/^/ðŸ”’ /")
# Get regular drives.
allregular="$(echo $output | grep -v crypto_LUKS | awk '{print $1}')"
[ -z $allregular ] || regular=$(echo $allregular | sed "s/^/ðŸ’¾ /")
# Get mobile phone connection.
phones="$(simple-mtpfs -l 2>/dev/null | sed "s/^/ðŸ“± /")"
device=$(echo $phones | cut -d' ' -f2 | sed "s/://")

# Jam everything into one variable for convenience.
alldrives=$(echo "$encrypted
$regular
$phones")
[ -z $alldrives ] && notify-send "ðŸ’¾ No drives found on this device." "Please try again." && exit 1
drive=$(echo $alldrives | dmenu -p 'Select drive to mount:')
[ -z $drive ] && exit 1

getmount() {
	mountpoint="$(find /mnt -maxdepth 2 -type d | dmenu -p 'Select a mountpoint:')"
	[ -z $mountpoint ] && exit 1
}

case $drive in
	ðŸ’¾*)
		selected=$(echo $drive | cut -d' ' -f2)
		getmount
		sudo mount $selected $mountpoint &&
			notify-send "ðŸ’¾ Drive successfully mounted." "$selected is now mounted on $mountpoint." ;;
	ðŸ”’*)
		selected=$(echo $drive | cut -d' ' -f2)
		getmount
		${TERMINAL:-st} -n "stFLOAT" -g 70x1 -e sudo cryptsetup open $selected decrypted-drive &&
			sudo mount /dev/mapper/decrypted-drive $mountpoint &&
			notify-send "ðŸ”“ Successfully decrypted and mounted drive." "/dev/mapper/decrypted-drive is now mounted on $mountpoint." ;;
	ðŸ“±*)
		simple-mtpfs --device $device $HOME/mp && \
			notify-send "ðŸ“± Successfully mounted your mobile phone." "Currently mounted on ~/mp" ;;
esac
