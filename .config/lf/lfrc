set cleaner ~/.config/lf/cleaner
set previewer ~/.config/lf/scope

set shell sh
map <tab> shell
set icons

cmd delete ${{
	clear; tput cup $(($(tput lines)/3)); tput bold
	set -f
	printf "%s\n\t" "$fx"
	printf "Delete File? [y/N] "
	IFS='
	'
	read ans
	[ $ans = "y" ] && rm -rf -- $fx &&
	notify-send "📦 File(s) deleted." "They may still be recovered." && clear
}}

cmd rename ${{
	clear; tput cup $(($(tput lines)/3)); tput bold
	set -f
	printf "%s\n\t" "$fx"
	printf "Rename File: "
	read ans
	[ -z $ans ] && exit 0
	mv "$f" "$ans" &&
	notify-send "📚 File(s) renamed." "\`$fx\` is now \`$ans\`." && clear
}}

cmd mkdir ${{
	clear; tput cup $(($(tput lines)/3)); tput bold
	set -f
	printf "Directory Name: "
	read ans
	[ -z $ans ] && exit 0
	mkdir "$ans" &&
	notify-send "📂 Directory created." "\`$(readlink -f "$ans")\`" && clear
}}

cmd touch ${{
	clear; tput cup $(($(tput lines)/3)); tput bold
	set -f
	printf "New File: "
	read ans
	[ -z $ans ] && exit 0
	touch "$ans" &&
	notify-send "✍️ File(s) created." "\`$(readlink -f "$ans")\`" && clear
}}

cmd unzip ${{
	clear; tput cup $(($(tput lines)/3)); tput bold
	set -f
	printf "%s\n\t" "$f"
	printf "Unzip file? [y/N] "
	read ans
	[ -z $ans ] && exit 0
	[ $ans = "y" ] && unzip -- "$f" &&
	notify-send "🎁 File(s) extracted." "Please check and see if there are errors present." && clear
}}

cmd shred ${{
	clear; tput cup $(($(tput lines)/3)); tput bold
	set -f
	printf "%s\n\t" "$fx"
	printf "Shred File? [y/N] "
	IFS='
	'
	read ans
	[ -z $ans ] && exit 0
	[ $ans = "y" ] && shred -u $fx &&
	notify-send "✂️ File(s) shreded." "They can no longer be recovered." && clear
}}

map e $opener "$f"
map <enter> $opener "$f"
map <backspace2> set hidden!
map D delete
map R rename
map M mkdir
map N touch
map U unzip
map S shred
